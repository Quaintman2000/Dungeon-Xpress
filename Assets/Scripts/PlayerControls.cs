//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""InFreeroam"",
            ""id"": ""48f4d422-1eda-4016-9eb5-90f1a972fc34"",
            ""actions"": [
                {
                    ""name"": ""Camera Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""158e3e30-3f32-4ff1-b5be-4a43a878f042"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""ea804957-850f-432d-ac34-37c426191179"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Click"",
                    ""type"": ""Button"",
                    ""id"": ""5a4e0042-7946-431f-b8e9-5cffcd277a0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.15)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""e013b95a-8022-45cd-b302-6d36a1eefc98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3ce729a6-1aca-4bae-a6f2-93b09decdafc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""bf7730fe-6ea2-4ed3-8859-4901f2b0e441"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a6b87171-c3c8-46a8-b1a4-81205f0f4c3d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Right Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ae229da-fdfb-4c6c-a5be-dc24798b1ce5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44760dc9-e4a8-4dc8-a98c-037b1f6e99cd"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44c60e40-eaeb-4320-b9c1-c085189246dd"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""7de6be18-6313-47ab-9e6b-1bdcd6d2d66d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""41c52483-6f22-4f57-9598-5b94a6d41ae1"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a0a18e2a-bb83-4fbf-845c-90448c29bdfa"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""501cf4f5-1a72-41cb-8c8b-e2c6a1f4094c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""43ff5644-aacf-4b21-8a23-74e23d964f58"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""242d1099-b6be-42db-a065-e7f35e090727"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""InBusy"",
            ""id"": ""25f0ee0c-9dda-488b-a1cd-b08ceeab0296"",
            ""actions"": [
                {
                    ""name"": ""Camera Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""f3be02c0-fa98-4478-90ba-1e31b10d9365"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""baa4aec9-97b0-4f55-9832-a92ca397010e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""886e72c6-56b9-4efe-90a7-b80769edab35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ad19c5c4-a91a-4d85-86cc-91aee4c1215a"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""cd4160b5-03e7-4ac2-930f-6ae418602525"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ed646a66-9867-467c-87ad-3a4c62a1b6eb"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5f733693-5aa1-4c9a-8a96-741ffa622c4f"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b41489aa-b630-45c3-bf90-85a56a690697"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2af12a21-30e8-46b5-a9b6-7d5d38e7dae2"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7d60a909-85af-4479-942d-2b4d35c379f4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""InDeath"",
            ""id"": ""b9e02d5a-fc3b-4158-a2a1-a30a2b24b8a2"",
            ""actions"": [
                {
                    ""name"": ""Camera Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""9814a810-8cc9-418d-9a7c-b5af75b9406f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""d9eb4ea7-1775-40ee-b3ee-b2488586e9b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""8d8839cf-62d7-4f88-81f1-9c6be6ca5f78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""af7351b5-d8b9-46e4-b5b3-166bd569b62d"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""14055a96-c3bc-43f5-a237-61029746b54e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""014c4334-7b24-4c58-9fa8-94127b94baf8"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0124d1be-75bb-488b-be88-380928867ab1"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""91715603-e9d6-4d54-8fba-ea67add83252"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9c5efb87-c445-42a2-bc41-2cbd55df2bc8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""42f4b9df-a773-43d2-bb32-1d048c758e97"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""InCombat"",
            ""id"": ""fe5a8599-9081-478b-866b-dd1903c51f7d"",
            ""actions"": [
                {
                    ""name"": ""Camera Movement"",
                    ""type"": ""Value"",
                    ""id"": ""0fd3baca-eac1-403d-9b3d-7e1e185b4619"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""43fe8417-50ec-42ee-9be5-a16c9c950bf5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""79a5d343-67f2-4956-bbee-5a28591b37ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Click"",
                    ""type"": ""Button"",
                    ""id"": ""48231993-beb5-4225-9075-7780a0b2d00d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""15341346-ba98-4051-9be8-b86b6e139b4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""083e2224-2371-4692-b2f1-8e7bcd96ef8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9776a21c-378f-48c8-8c17-44c1ad239aaa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""7c1d7384-a2c8-42b9-b05a-1bb256a7ceca"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""f047ba5e-dc13-4ec0-a458-045e3fbd3676"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""6e62b3ab-d60a-4285-b762-7e48a7e4d393"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""f367506a-d413-4088-ab74-2194cf478622"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""95765ee1-452f-410c-9fe0-fc57074db07f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Right Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba478edd-adf6-4df8-b89c-de457fabc807"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""515af11d-7cfd-4e21-a17d-d3de4d996534"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b339a3e4-2fe4-4898-80ed-c054a8a2b1e6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""87fa0501-d65e-4fe1-b48b-df23b3d3b279"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e47c95b1-d9fa-4d92-b0b2-9ce12e623320"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""88ce83d4-4a96-4b42-a423-b1678a3ee22e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3fa44ce5-8c38-4a25-baa7-a56f755c0b5e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d218bf33-69c5-4037-851a-15672a7eaffe"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""InCasting"",
            ""id"": ""a8d180ee-84a3-48f1-abd7-6db1557cd4f4"",
            ""actions"": [
                {
                    ""name"": ""Camera Movement"",
                    ""type"": ""Value"",
                    ""id"": ""ee44ac3f-66cd-46e0-8ad0-aeea4430d850"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""c3b8a60e-6ccf-4042-8d84-d3d7322c3478"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""39250666-e4a5-462e-b0c8-7cadeca5a034"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Click"",
                    ""type"": ""Button"",
                    ""id"": ""4e194a0e-3c50-4338-87e2-c2e7793e6b8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""b1105be4-5c24-4033-96a0-32ed0427e1f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""b771ee04-42e6-40e5-816a-d3d9beba232c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""cea14718-1fa9-4985-8c8a-ac56ed8e4d68"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""efe7a243-331f-4514-9bfc-1e524ce0fc5a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""d069bd35-05bb-4476-8592-fb3831d15c39"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""6e3e1b96-437c-470f-a280-077a70482ea7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""17e5afba-137b-4ff3-9779-36a2c2b1fff9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e87f3530-aaec-46e7-9410-f51e2b6cc97f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Right Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""033053d3-8391-480f-a97d-d833dae606cc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc456a62-93aa-4b8b-a963-670f16ef9977"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""bd601e6f-87c4-47a7-ae7b-c4552070b6f7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8acd5782-fc22-4b3e-9544-920e0e3c1560"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8957eb50-6b72-47a9-8cc7-cdcff1e5cfe8"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2bb8f164-cd9f-4793-8449-ac54284be742"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4e186608-4225-43b1-be21-9bb394c07523"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""139b87b8-9e6c-4f3d-b845-ef05dee62af0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard and Mouse"",
            ""bindingGroup"": ""Keyboard and Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // InFreeroam
        m_InFreeroam = asset.FindActionMap("InFreeroam", throwIfNotFound: true);
        m_InFreeroam_CameraZoom = m_InFreeroam.FindAction("Camera Zoom", throwIfNotFound: true);
        m_InFreeroam_CameraRotate = m_InFreeroam.FindAction("Camera Rotate", throwIfNotFound: true);
        m_InFreeroam_RightClick = m_InFreeroam.FindAction("Right Click", throwIfNotFound: true);
        m_InFreeroam_Select = m_InFreeroam.FindAction("Select", throwIfNotFound: true);
        m_InFreeroam_Interact = m_InFreeroam.FindAction("Interact", throwIfNotFound: true);
        m_InFreeroam_Pause = m_InFreeroam.FindAction("Pause", throwIfNotFound: true);
        // InBusy
        m_InBusy = asset.FindActionMap("InBusy", throwIfNotFound: true);
        m_InBusy_CameraZoom = m_InBusy.FindAction("Camera Zoom", throwIfNotFound: true);
        m_InBusy_CameraRotate = m_InBusy.FindAction("Camera Rotate", throwIfNotFound: true);
        m_InBusy_Pause = m_InBusy.FindAction("Pause", throwIfNotFound: true);
        // InDeath
        m_InDeath = asset.FindActionMap("InDeath", throwIfNotFound: true);
        m_InDeath_CameraZoom = m_InDeath.FindAction("Camera Zoom", throwIfNotFound: true);
        m_InDeath_CameraRotate = m_InDeath.FindAction("Camera Rotate", throwIfNotFound: true);
        m_InDeath_Pause = m_InDeath.FindAction("Pause", throwIfNotFound: true);
        // InCombat
        m_InCombat = asset.FindActionMap("InCombat", throwIfNotFound: true);
        m_InCombat_CameraMovement = m_InCombat.FindAction("Camera Movement", throwIfNotFound: true);
        m_InCombat_CameraZoom = m_InCombat.FindAction("Camera Zoom", throwIfNotFound: true);
        m_InCombat_CameraRotate = m_InCombat.FindAction("Camera Rotate", throwIfNotFound: true);
        m_InCombat_RightClick = m_InCombat.FindAction("Right Click", throwIfNotFound: true);
        m_InCombat_Select = m_InCombat.FindAction("Select", throwIfNotFound: true);
        m_InCombat_Pause = m_InCombat.FindAction("Pause", throwIfNotFound: true);
        // InCasting
        m_InCasting = asset.FindActionMap("InCasting", throwIfNotFound: true);
        m_InCasting_CameraMovement = m_InCasting.FindAction("Camera Movement", throwIfNotFound: true);
        m_InCasting_CameraZoom = m_InCasting.FindAction("Camera Zoom", throwIfNotFound: true);
        m_InCasting_CameraRotate = m_InCasting.FindAction("Camera Rotate", throwIfNotFound: true);
        m_InCasting_RightClick = m_InCasting.FindAction("Right Click", throwIfNotFound: true);
        m_InCasting_Select = m_InCasting.FindAction("Select", throwIfNotFound: true);
        m_InCasting_Pause = m_InCasting.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InFreeroam
    private readonly InputActionMap m_InFreeroam;
    private List<IInFreeroamActions> m_InFreeroamActionsCallbackInterfaces = new List<IInFreeroamActions>();
    private readonly InputAction m_InFreeroam_CameraZoom;
    private readonly InputAction m_InFreeroam_CameraRotate;
    private readonly InputAction m_InFreeroam_RightClick;
    private readonly InputAction m_InFreeroam_Select;
    private readonly InputAction m_InFreeroam_Interact;
    private readonly InputAction m_InFreeroam_Pause;
    public struct InFreeroamActions
    {
        private @PlayerControls m_Wrapper;
        public InFreeroamActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraZoom => m_Wrapper.m_InFreeroam_CameraZoom;
        public InputAction @CameraRotate => m_Wrapper.m_InFreeroam_CameraRotate;
        public InputAction @RightClick => m_Wrapper.m_InFreeroam_RightClick;
        public InputAction @Select => m_Wrapper.m_InFreeroam_Select;
        public InputAction @Interact => m_Wrapper.m_InFreeroam_Interact;
        public InputAction @Pause => m_Wrapper.m_InFreeroam_Pause;
        public InputActionMap Get() { return m_Wrapper.m_InFreeroam; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InFreeroamActions set) { return set.Get(); }
        public void AddCallbacks(IInFreeroamActions instance)
        {
            if (instance == null || m_Wrapper.m_InFreeroamActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InFreeroamActionsCallbackInterfaces.Add(instance);
            @CameraZoom.started += instance.OnCameraZoom;
            @CameraZoom.performed += instance.OnCameraZoom;
            @CameraZoom.canceled += instance.OnCameraZoom;
            @CameraRotate.started += instance.OnCameraRotate;
            @CameraRotate.performed += instance.OnCameraRotate;
            @CameraRotate.canceled += instance.OnCameraRotate;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IInFreeroamActions instance)
        {
            @CameraZoom.started -= instance.OnCameraZoom;
            @CameraZoom.performed -= instance.OnCameraZoom;
            @CameraZoom.canceled -= instance.OnCameraZoom;
            @CameraRotate.started -= instance.OnCameraRotate;
            @CameraRotate.performed -= instance.OnCameraRotate;
            @CameraRotate.canceled -= instance.OnCameraRotate;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IInFreeroamActions instance)
        {
            if (m_Wrapper.m_InFreeroamActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInFreeroamActions instance)
        {
            foreach (var item in m_Wrapper.m_InFreeroamActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InFreeroamActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InFreeroamActions @InFreeroam => new InFreeroamActions(this);

    // InBusy
    private readonly InputActionMap m_InBusy;
    private List<IInBusyActions> m_InBusyActionsCallbackInterfaces = new List<IInBusyActions>();
    private readonly InputAction m_InBusy_CameraZoom;
    private readonly InputAction m_InBusy_CameraRotate;
    private readonly InputAction m_InBusy_Pause;
    public struct InBusyActions
    {
        private @PlayerControls m_Wrapper;
        public InBusyActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraZoom => m_Wrapper.m_InBusy_CameraZoom;
        public InputAction @CameraRotate => m_Wrapper.m_InBusy_CameraRotate;
        public InputAction @Pause => m_Wrapper.m_InBusy_Pause;
        public InputActionMap Get() { return m_Wrapper.m_InBusy; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InBusyActions set) { return set.Get(); }
        public void AddCallbacks(IInBusyActions instance)
        {
            if (instance == null || m_Wrapper.m_InBusyActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InBusyActionsCallbackInterfaces.Add(instance);
            @CameraZoom.started += instance.OnCameraZoom;
            @CameraZoom.performed += instance.OnCameraZoom;
            @CameraZoom.canceled += instance.OnCameraZoom;
            @CameraRotate.started += instance.OnCameraRotate;
            @CameraRotate.performed += instance.OnCameraRotate;
            @CameraRotate.canceled += instance.OnCameraRotate;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IInBusyActions instance)
        {
            @CameraZoom.started -= instance.OnCameraZoom;
            @CameraZoom.performed -= instance.OnCameraZoom;
            @CameraZoom.canceled -= instance.OnCameraZoom;
            @CameraRotate.started -= instance.OnCameraRotate;
            @CameraRotate.performed -= instance.OnCameraRotate;
            @CameraRotate.canceled -= instance.OnCameraRotate;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IInBusyActions instance)
        {
            if (m_Wrapper.m_InBusyActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInBusyActions instance)
        {
            foreach (var item in m_Wrapper.m_InBusyActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InBusyActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InBusyActions @InBusy => new InBusyActions(this);

    // InDeath
    private readonly InputActionMap m_InDeath;
    private List<IInDeathActions> m_InDeathActionsCallbackInterfaces = new List<IInDeathActions>();
    private readonly InputAction m_InDeath_CameraZoom;
    private readonly InputAction m_InDeath_CameraRotate;
    private readonly InputAction m_InDeath_Pause;
    public struct InDeathActions
    {
        private @PlayerControls m_Wrapper;
        public InDeathActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraZoom => m_Wrapper.m_InDeath_CameraZoom;
        public InputAction @CameraRotate => m_Wrapper.m_InDeath_CameraRotate;
        public InputAction @Pause => m_Wrapper.m_InDeath_Pause;
        public InputActionMap Get() { return m_Wrapper.m_InDeath; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InDeathActions set) { return set.Get(); }
        public void AddCallbacks(IInDeathActions instance)
        {
            if (instance == null || m_Wrapper.m_InDeathActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InDeathActionsCallbackInterfaces.Add(instance);
            @CameraZoom.started += instance.OnCameraZoom;
            @CameraZoom.performed += instance.OnCameraZoom;
            @CameraZoom.canceled += instance.OnCameraZoom;
            @CameraRotate.started += instance.OnCameraRotate;
            @CameraRotate.performed += instance.OnCameraRotate;
            @CameraRotate.canceled += instance.OnCameraRotate;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IInDeathActions instance)
        {
            @CameraZoom.started -= instance.OnCameraZoom;
            @CameraZoom.performed -= instance.OnCameraZoom;
            @CameraZoom.canceled -= instance.OnCameraZoom;
            @CameraRotate.started -= instance.OnCameraRotate;
            @CameraRotate.performed -= instance.OnCameraRotate;
            @CameraRotate.canceled -= instance.OnCameraRotate;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IInDeathActions instance)
        {
            if (m_Wrapper.m_InDeathActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInDeathActions instance)
        {
            foreach (var item in m_Wrapper.m_InDeathActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InDeathActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InDeathActions @InDeath => new InDeathActions(this);

    // InCombat
    private readonly InputActionMap m_InCombat;
    private List<IInCombatActions> m_InCombatActionsCallbackInterfaces = new List<IInCombatActions>();
    private readonly InputAction m_InCombat_CameraMovement;
    private readonly InputAction m_InCombat_CameraZoom;
    private readonly InputAction m_InCombat_CameraRotate;
    private readonly InputAction m_InCombat_RightClick;
    private readonly InputAction m_InCombat_Select;
    private readonly InputAction m_InCombat_Pause;
    public struct InCombatActions
    {
        private @PlayerControls m_Wrapper;
        public InCombatActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraMovement => m_Wrapper.m_InCombat_CameraMovement;
        public InputAction @CameraZoom => m_Wrapper.m_InCombat_CameraZoom;
        public InputAction @CameraRotate => m_Wrapper.m_InCombat_CameraRotate;
        public InputAction @RightClick => m_Wrapper.m_InCombat_RightClick;
        public InputAction @Select => m_Wrapper.m_InCombat_Select;
        public InputAction @Pause => m_Wrapper.m_InCombat_Pause;
        public InputActionMap Get() { return m_Wrapper.m_InCombat; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InCombatActions set) { return set.Get(); }
        public void AddCallbacks(IInCombatActions instance)
        {
            if (instance == null || m_Wrapper.m_InCombatActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InCombatActionsCallbackInterfaces.Add(instance);
            @CameraMovement.started += instance.OnCameraMovement;
            @CameraMovement.performed += instance.OnCameraMovement;
            @CameraMovement.canceled += instance.OnCameraMovement;
            @CameraZoom.started += instance.OnCameraZoom;
            @CameraZoom.performed += instance.OnCameraZoom;
            @CameraZoom.canceled += instance.OnCameraZoom;
            @CameraRotate.started += instance.OnCameraRotate;
            @CameraRotate.performed += instance.OnCameraRotate;
            @CameraRotate.canceled += instance.OnCameraRotate;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IInCombatActions instance)
        {
            @CameraMovement.started -= instance.OnCameraMovement;
            @CameraMovement.performed -= instance.OnCameraMovement;
            @CameraMovement.canceled -= instance.OnCameraMovement;
            @CameraZoom.started -= instance.OnCameraZoom;
            @CameraZoom.performed -= instance.OnCameraZoom;
            @CameraZoom.canceled -= instance.OnCameraZoom;
            @CameraRotate.started -= instance.OnCameraRotate;
            @CameraRotate.performed -= instance.OnCameraRotate;
            @CameraRotate.canceled -= instance.OnCameraRotate;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IInCombatActions instance)
        {
            if (m_Wrapper.m_InCombatActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInCombatActions instance)
        {
            foreach (var item in m_Wrapper.m_InCombatActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InCombatActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InCombatActions @InCombat => new InCombatActions(this);

    // InCasting
    private readonly InputActionMap m_InCasting;
    private List<IInCastingActions> m_InCastingActionsCallbackInterfaces = new List<IInCastingActions>();
    private readonly InputAction m_InCasting_CameraMovement;
    private readonly InputAction m_InCasting_CameraZoom;
    private readonly InputAction m_InCasting_CameraRotate;
    private readonly InputAction m_InCasting_RightClick;
    private readonly InputAction m_InCasting_Select;
    private readonly InputAction m_InCasting_Pause;
    public struct InCastingActions
    {
        private @PlayerControls m_Wrapper;
        public InCastingActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraMovement => m_Wrapper.m_InCasting_CameraMovement;
        public InputAction @CameraZoom => m_Wrapper.m_InCasting_CameraZoom;
        public InputAction @CameraRotate => m_Wrapper.m_InCasting_CameraRotate;
        public InputAction @RightClick => m_Wrapper.m_InCasting_RightClick;
        public InputAction @Select => m_Wrapper.m_InCasting_Select;
        public InputAction @Pause => m_Wrapper.m_InCasting_Pause;
        public InputActionMap Get() { return m_Wrapper.m_InCasting; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InCastingActions set) { return set.Get(); }
        public void AddCallbacks(IInCastingActions instance)
        {
            if (instance == null || m_Wrapper.m_InCastingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InCastingActionsCallbackInterfaces.Add(instance);
            @CameraMovement.started += instance.OnCameraMovement;
            @CameraMovement.performed += instance.OnCameraMovement;
            @CameraMovement.canceled += instance.OnCameraMovement;
            @CameraZoom.started += instance.OnCameraZoom;
            @CameraZoom.performed += instance.OnCameraZoom;
            @CameraZoom.canceled += instance.OnCameraZoom;
            @CameraRotate.started += instance.OnCameraRotate;
            @CameraRotate.performed += instance.OnCameraRotate;
            @CameraRotate.canceled += instance.OnCameraRotate;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IInCastingActions instance)
        {
            @CameraMovement.started -= instance.OnCameraMovement;
            @CameraMovement.performed -= instance.OnCameraMovement;
            @CameraMovement.canceled -= instance.OnCameraMovement;
            @CameraZoom.started -= instance.OnCameraZoom;
            @CameraZoom.performed -= instance.OnCameraZoom;
            @CameraZoom.canceled -= instance.OnCameraZoom;
            @CameraRotate.started -= instance.OnCameraRotate;
            @CameraRotate.performed -= instance.OnCameraRotate;
            @CameraRotate.canceled -= instance.OnCameraRotate;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IInCastingActions instance)
        {
            if (m_Wrapper.m_InCastingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInCastingActions instance)
        {
            foreach (var item in m_Wrapper.m_InCastingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InCastingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InCastingActions @InCasting => new InCastingActions(this);
    private int m_KeyboardandMouseSchemeIndex = -1;
    public InputControlScheme KeyboardandMouseScheme
    {
        get
        {
            if (m_KeyboardandMouseSchemeIndex == -1) m_KeyboardandMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard and Mouse");
            return asset.controlSchemes[m_KeyboardandMouseSchemeIndex];
        }
    }
    public interface IInFreeroamActions
    {
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnCameraRotate(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IInBusyActions
    {
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnCameraRotate(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IInDeathActions
    {
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnCameraRotate(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IInCombatActions
    {
        void OnCameraMovement(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnCameraRotate(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IInCastingActions
    {
        void OnCameraMovement(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnCameraRotate(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
